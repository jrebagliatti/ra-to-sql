(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("raToSql", [], factory);
	else if(typeof exports === 'object')
		exports["raToSql"] = factory();
	else
		root["raToSql"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ra-to-sql.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/node-libs-browser/mock/empty.js":
/*!******************************************************!*\
  !*** ./node_modules/node-libs-browser/mock/empty.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack://raToSql/./node_modules/node-libs-browser/mock/empty.js?");

/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://raToSql/./node_modules/path-browserify/index.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://raToSql/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack://raToSql/(webpack)/buildin/module.js?");

/***/ }),

/***/ "./src/ra-to-sql.js":
/*!**************************!*\
  !*** ./src/ra-to-sql.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parser = __webpack_require__(/*! ./ra */ \"./src/ra.js\").parser;\r\n\r\nparser.yy = __webpack_require__(/*! ./sql_scope */ \"./src/sql_scope.js\");\r\n\r\nfunction getSql(ra) {\r\n    // TODO: Prepare input, by removing consecutive newlines\r\n    var result = parser.parse(ra);\r\n\r\n    for(i = 0; i < result.length; i++){\r\n        var element = result[i];\r\n        console.log(`Processing sentence ${i} of type ${element.type}`);\r\n\r\n        if (element.type == \"identifier\") {\r\n            console.log(`Looking for identifier \"${element.value.id}\" in following sentences`);\r\n\r\n            var newExpression = `(${element.value.expression})`; \r\n\r\n            if (element.value.fields != null) {\r\n                var fieldList = `SELECT ${element.value.fields.map(x => `null as ${x}`).join(',')} WHERE 1=2 UNION SELECT DISTINCT *`;\r\n                newExpression = `(${fieldList} FROM ${element.value.expression})`;\r\n            }\r\n\r\n            for(j = i + 1; j < result.length; j++){\r\n                var elementToReplace = result[j];\r\n                var valueToBeReplaced;\r\n\r\n                if (elementToReplace.type == \"identifier\") {\r\n                    valueToBeReplaced = elementToReplace.value.expression;\r\n                }\r\n                else {\r\n                    valueToBeReplaced = elementToReplace.value.value;\r\n                }\r\n\r\n                console.log(`  Inspecting [${elementToReplace.type}] ${valueToBeReplaced}`);\r\n                valueToBeReplaced = valueToBeReplaced.replace(new RegExp(\"##\" + element.value.id + \"##\", 'g'), newExpression);\r\n\r\n                if (elementToReplace.type == \"identifier\") {\r\n                    elementToReplace.value.expression = valueToBeReplaced;\r\n                }\r\n                else {\r\n                    elementToReplace.value.value = valueToBeReplaced;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Expression Found. Returning\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    var result = element.value.value || newExpression;\r\n\r\n    result = result.replace(new RegExp(\"(##)(\\\\S*)(##)\", 'g'), \"$2\");\r\n\r\n    return `SELECT DISTINCT * FROM ${result}`;\r\n}\r\n\r\nmodule.exports = {\r\n    getSql\r\n}\n\n//# sourceURL=webpack://raToSql/./src/ra-to-sql.js?");

/***/ }),

/***/ "./src/ra.js":
/*!*******************!*\
  !*** ./src/ra.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, module) {/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar ra = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,9],$V2=[1,6],$V3=[1,10],$V4=[1,20],$V5=[1,22],$V6=[1,21],$V7=[5,9,10],$V8=[5,9,10,11,14,26,29,30],$V9=[2,24],$Va=[1,29],$Vb=[1,30],$Vc=[1,31],$Vd=[1,32],$Ve=[1,33],$Vf=[1,35],$Vg=[5,9,10,16,32,33,34,35,36],$Vh=[1,49],$Vi=[1,47],$Vj=[1,46],$Vk=[1,48],$Vl=[1,50],$Vm=[1,64],$Vn=[1,60],$Vo=[1,61],$Vp=[1,63],$Vq=[1,69],$Vr=[16,28,38],$Vs=[1,71],$Vt=[1,70],$Vu=[1,72],$Vv=[1,73],$Vw=[16,28,36,38,39,40,41,46,47,48,49,50,51,54,55],$Vx=[16,28],$Vy=[16,28,54,55],$Vz=[1,85],$VA=[1,86],$VB=[1,87],$VC=[1,88],$VD=[1,89],$VE=[1,90],$VF=[1,98],$VG=[11,14,36,42,43,57,58,59],$VH=[11,14,36,42,43],$VI=[16,28,36,38,39,46,47,48,49,50,51,54,55];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"ra_program\":3,\"ra_sentences\":4,\"EOF\":5,\"sentence_separators\":6,\"ra_sentence\":7,\"sentence_separator\":8,\"NEWLINE\":9,\";\":10,\"IDENTIFIER\":11,\"<-\":12,\"ra_expression\":13,\"(\":14,\"field_list\":15,\")\":16,\"tableName\":17,\"projection\":18,\"selection\":19,\"union\":20,\"intersection\":21,\"product\":22,\"natural\":23,\"subtraction\":24,\"rename\":25,\"PROJ\":26,\"[\":27,\"]\":28,\"REN\":29,\"SEL\":30,\"bool_expression\":31,\"UNION\":32,\"INTERSECTION\":33,\"PRODUCT\":34,\"NATURAL\":35,\"-\":36,\"e\":37,\"COMMA\":38,\"+\":39,\"*\":40,\"/\":41,\"NUMBER\":42,\"STR\":43,\"b_e\":44,\"bool_operator\":45,\">\":46,\"<\":47,\"<=\":48,\">=\":49,\"=\":50,\"<>\":51,\"factor\":52,\"bool_op\":53,\"OR\":54,\"AND\":55,\"term\":56,\"TRUE\":57,\"FALSE\":58,\"!\":59,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",9:\"NEWLINE\",10:\";\",11:\"IDENTIFIER\",12:\"<-\",14:\"(\",16:\")\",26:\"PROJ\",27:\"[\",28:\"]\",29:\"REN\",30:\"SEL\",32:\"UNION\",33:\"INTERSECTION\",34:\"PRODUCT\",35:\"NATURAL\",36:\"-\",38:\"COMMA\",39:\"+\",40:\"*\",41:\"/\",42:\"NUMBER\",43:\"STR\",46:\">\",47:\"<\",48:\"<=\",49:\">=\",50:\"=\",51:\"<>\",54:\"OR\",55:\"AND\",57:\"TRUE\",58:\"FALSE\",59:\"!\"},\nproductions_: [0,[3,2],[3,3],[3,4],[3,3],[4,1],[4,3],[6,1],[6,2],[8,1],[8,1],[7,3],[7,6],[7,1],[13,3],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[17,1],[18,7],[25,7],[19,7],[20,3],[21,3],[22,3],[23,3],[24,3],[15,1],[15,3],[37,3],[37,3],[37,3],[37,3],[37,2],[37,3],[37,1],[37,1],[37,1],[44,3],[45,1],[45,1],[45,1],[45,1],[45,1],[45,1],[31,1],[31,3],[53,1],[53,1],[56,1],[56,3],[52,1],[52,1],[52,1],[52,2],[52,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 4:\n return $$[$0-1] \nbreak;\ncase 2: case 3:\n return $$[$0-2] \nbreak;\ncase 5:\n this.$ = new Array($$[$0]); \nbreak;\ncase 6:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 11:\n this.$ = { type: 'identifier', value: { id: $$[$0-2], expression: $$[$0].value} }; \nbreak;\ncase 12:\n this.$ = { type: 'identifier', value: { id: $$[$0-5], expression: $$[$0].value, fields: $$[$0-3] } }; \nbreak;\ncase 13:\n this.$ = { type: 'expression', value: $$[$0] }; \nbreak;\ncase 14:\n this.$ = {id: yy.getNewId('GROUP'), value: $$[$0-1].value }; \nbreak;\ncase 15:\n this.$ = {id: yy.getNewId('ID'), value: $$[$0] }; \nbreak;\ncase 16: case 17:\n this.$ = {id: yy.getNewId('PROJ'), value: $$[$0] }; \nbreak;\ncase 18: case 19:\n this.$ = {id: yy.getNewId('UNION'), value: $$[$0] }; \nbreak;\ncase 20: case 21:\n this.$ = {id: yy.getNewId('PROD'), value: $$[$0] }; \nbreak;\ncase 22:\n this.$ = {id: yy.getNewId('SUBS'), value: $$[$0] }; \nbreak;\ncase 23:\n this.$ = {id: yy.getNewId('REN'), value: $$[$0] }; \nbreak;\ncase 24:\n this.$ = yy.getSingleTable($$[$0]); \nbreak;\ncase 25:\n this.$ = yy.getProjection($$[$0-1].value, $$[$0-1].id, $$[$0-4]); \nbreak;\ncase 26:\n this.$ = yy.getRename($$[$0-1].value, $$[$0-1].id, $$[$0-4]); \nbreak;\ncase 27:\n this.$ = yy.getSelection($$[$0-1].value, $$[$0-1].id, $$[$0-4]); \nbreak;\ncase 28:\n this.$ = yy.getUnion($$[$0-2].value, $$[$0].value); \nbreak;\ncase 29:\n this.$ = yy.getIntersection($$[$0-2].value, $$[$0].value); \nbreak;\ncase 30:\n this.$ = yy.getProduct($$[$0-2].value, $$[$0].value); \nbreak;\ncase 31:\n this.$ = yy.getNaturalJoin($$[$0-2].value, $$[$0].value); \nbreak;\ncase 32:\n this.$ = yy.getSubtraction($$[$0-2].value, $$[$0].value); \nbreak;\ncase 33:\nthis.$ = new Array($$[$0])\nbreak;\ncase 34:\n \r\n            $$[$0-2].push($$[$0]);\r\n            this.$ = $$[$0-2];\r\n        \nbreak;\ncase 35:\n this.$ = $$[$0-2] + '+' + $$[$0]; \nbreak;\ncase 36:\n this.$ = $$[$0-2] + '-' + $$[$0]; \nbreak;\ncase 37:\n this.$ = $$[$0-2] + '*' + $$[$0]; \nbreak;\ncase 38:\n this.$ = $$[$0-2] + '/' + $$[$0]; \nbreak;\ncase 39:\n this.$ = '-' + $$[$0];\nbreak;\ncase 40: case 61:\n this.$ =  '(' + $$[$0-1] + ')'; \nbreak;\ncase 41:\n this.$ = Number(yytext); \nbreak;\ncase 43:\n this.$ = \"'\" + $$[$0] + \"'\" \nbreak;\ncase 44:\n this.$ = yy.getBooleanOperation($$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 52:\n this.$ = yy.getBooleanExpression($$[$0-2], $$[$0-1], $$[$0]); \nbreak;\ncase 56:\n this.$ = yy.getAnd($$[$0-2], $$[$0]); \nbreak;\ncase 60:\n this.$ = yy.getNot($$[$0]); \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:4,8:5,9:$V0,10:$V1,11:$V2,13:7,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{1:[3]},{5:[1,23],6:24,8:5,9:$V0,10:$V1},{4:25,7:4,8:26,9:$V0,10:$V1,11:$V2,13:7,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},o($V7,[2,5]),o($V8,[2,7]),o([5,9,10,32,33,34,35,36],$V9,{12:[1,27],14:[1,28]}),o($V7,[2,13],{32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve}),o($V8,[2,9]),o($V8,[2,10]),{11:$Vf,13:34,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},o($Vg,[2,15]),o($Vg,[2,16]),o($Vg,[2,17]),o($Vg,[2,18]),o($Vg,[2,19]),o($Vg,[2,20]),o($Vg,[2,21]),o($Vg,[2,22]),o($Vg,[2,23]),{27:[1,36]},{27:[1,37]},{27:[1,38]},{1:[2,1]},{5:[1,39],7:40,8:26,9:$V0,10:$V1,11:$V2,13:7,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{5:[1,42],6:41,8:5,9:$V0,10:$V1},o($V8,[2,8]),{11:$Vf,13:43,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{11:$Vh,14:$Vi,15:44,36:$Vj,37:45,42:$Vk,43:$Vl},{11:$Vf,13:51,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{11:$Vf,13:52,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{11:$Vf,13:53,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{11:$Vf,13:54,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{11:$Vf,13:55,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{16:[1,56],32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve},o($Vg,$V9),{11:$Vh,14:$Vi,15:57,36:$Vj,37:45,42:$Vk,43:$Vl},{11:$Vh,14:$Vm,31:58,36:$Vj,37:65,42:$Vk,43:$Vl,44:62,52:59,57:$Vn,58:$Vo,59:$Vp},{11:$Vh,14:$Vi,15:66,36:$Vj,37:45,42:$Vk,43:$Vl},{1:[2,2]},o($V7,[2,6]),{5:[1,67],7:40,8:26,9:$V0,10:$V1,11:$V2,13:7,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{1:[2,4]},o($V7,[2,11],{32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve}),{16:[1,68],38:$Vq},o($Vr,[2,33],{36:$Vs,39:$Vt,40:$Vu,41:$Vv}),{11:$Vh,14:$Vi,36:$Vj,37:74,42:$Vk,43:$Vl},{11:$Vh,14:$Vi,36:$Vj,37:75,42:$Vk,43:$Vl},o($Vw,[2,41]),o($Vw,[2,42]),o($Vw,[2,43]),o([5,9,10,16,32],[2,28],{33:$Vb,34:$Vc,35:$Vd,36:$Ve}),o([5,9,10,16,32,33],[2,29],{34:$Vc,35:$Vd,36:$Ve}),o([5,9,10,16,32,33,34],[2,30],{35:$Vd,36:$Ve}),o([5,9,10,16,32,33,34,35],[2,31],{36:$Ve}),o($Vg,[2,32]),o($Vg,[2,14]),{28:[1,76],38:$Vq},{28:[1,77]},o($Vx,[2,51],{53:78,54:[1,79],55:[1,80]}),o($Vy,[2,57]),o($Vy,[2,58]),o($Vy,[2,59]),{11:$Vh,14:$Vm,36:$Vj,37:65,42:$Vk,43:$Vl,44:62,52:81,57:$Vn,58:$Vo,59:$Vp},{11:$Vh,14:$Vm,31:82,36:$Vj,37:83,42:$Vk,43:$Vl,44:62,52:59,57:$Vn,58:$Vo,59:$Vp},{36:$Vs,39:$Vt,40:$Vu,41:$Vv,45:84,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE},{28:[1,91],38:$Vq},{1:[2,3]},{12:[1,92]},{11:$Vh,14:$Vi,36:$Vj,37:93,42:$Vk,43:$Vl},{11:$Vh,14:$Vi,36:$Vj,37:94,42:$Vk,43:$Vl},{11:$Vh,14:$Vi,36:$Vj,37:95,42:$Vk,43:$Vl},{11:$Vh,14:$Vi,36:$Vj,37:96,42:$Vk,43:$Vl},{11:$Vh,14:$Vi,36:$Vj,37:97,42:$Vk,43:$Vl},o($Vw,[2,39]),{16:$VF,36:$Vs,39:$Vt,40:$Vu,41:$Vv},{14:[1,99]},{14:[1,100]},{11:$Vh,14:$Vm,31:101,36:$Vj,37:65,42:$Vk,43:$Vl,44:62,52:59,57:$Vn,58:$Vo,59:$Vp},o($VG,[2,53]),o($VG,[2,54]),o($Vy,[2,60]),{16:[1,102]},{16:$VF,36:$Vs,39:$Vt,40:$Vu,41:$Vv,45:84,46:$Vz,47:$VA,48:$VB,49:$VC,50:$VD,51:$VE},{11:$Vh,14:$Vi,36:$Vj,37:103,42:$Vk,43:$Vl},o($VH,[2,45]),o($VH,[2,46]),o($VH,[2,47]),o($VH,[2,48]),o($VH,[2,49]),o($VH,[2,50]),{14:[1,104]},{11:$Vf,13:105,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},o($Vr,[2,34],{36:$Vs,39:$Vt,40:$Vu,41:$Vv}),o($VI,[2,35],{40:$Vu,41:$Vv}),o($VI,[2,36],{40:$Vu,41:$Vv}),o($Vw,[2,37]),o($Vw,[2,38]),o($Vw,[2,40]),{11:$Vf,13:106,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},{11:$Vf,13:107,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},o($Vx,[2,52]),o($Vy,[2,61]),o($Vy,[2,44],{36:$Vs,39:$Vt,40:$Vu,41:$Vv}),{11:$Vf,13:108,14:$V3,17:11,18:12,19:13,20:14,21:15,22:16,23:17,24:18,25:19,26:$V4,29:$V5,30:$V6},o($V7,[2,12],{32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve}),{16:[1,109],32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve},{16:[1,110],32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve},{16:[1,111],32:$Va,33:$Vb,34:$Vc,35:$Vd,36:$Ve},o($Vg,[2,25]),o($Vg,[2,27]),o($Vg,[2,26])],\ndefaultActions: {23:[2,1],39:[2,2],42:[2,4],67:[2,3]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:/* skip comments */\nbreak;\ncase 2:return 9;\nbreak;\ncase 3:/* skip whitespace */\nbreak;\ncase 4:yy_.yytext = yy_.yytext.slice(1,-1); return 43\nbreak;\ncase 5:yy_.yytext = yy_.yytext.slice(1,-1); return 43\nbreak;\ncase 6:return \"PROJ\"\nbreak;\ncase 7:return \"PROJ\"\nbreak;\ncase 8:return \"PROJ\"\nbreak;\ncase 9:return \"PROJ\"\nbreak;\ncase 10:return \"PROJ\"\nbreak;\ncase 11:return \"PROJ\"\nbreak;\ncase 12:return \"PROJ\"\nbreak;\ncase 13:return \"SEL\"\nbreak;\ncase 14:return \"SEL\"\nbreak;\ncase 15:return \"SEL\"\nbreak;\ncase 16:return \"SEL\"\nbreak;\ncase 17:return \"UNION\"\nbreak;\ncase 18:return \"UNION\"\nbreak;\ncase 19:return \"UNION\"\nbreak;\ncase 20:return \"NATURAL\"\nbreak;\ncase 21:return \"NATURAL\"\nbreak;\ncase 22:return \"NATURAL\"\nbreak;\ncase 23:return \"PRODUCT\"\nbreak;\ncase 24:return \"PRODUCT\"\nbreak;\ncase 25:return \"PRODUCT\"\nbreak;\ncase 26:return \"INTERSECTION\"\nbreak;\ncase 27:return \"INTERSECTION\"\nbreak;\ncase 28:return \"INTERSECTION\"\nbreak;\ncase 29:return \"INTERSECTION\"\nbreak;\ncase 30:return \"TRUE\"\nbreak;\ncase 31:return \"FALSE\"\nbreak;\ncase 32:return \"REN\"\nbreak;\ncase 33:return \"REN\"\nbreak;\ncase 34:return \"REN\"\nbreak;\ncase 35:return \"REN\"\nbreak;\ncase 36:return 54\nbreak;\ncase 37:return 54\nbreak;\ncase 38:return 54\nbreak;\ncase 39:return 55\nbreak;\ncase 40:return 55\nbreak;\ncase 41:return 55\nbreak;\ncase 42:return 11\nbreak;\ncase 43:return 42\nbreak;\ncase 44:return 40\nbreak;\ncase 45:return 41\nbreak;\ncase 46:return 36\nbreak;\ncase 47:return 39\nbreak;\ncase 48:return '^'\nbreak;\ncase 49:return 59\nbreak;\ncase 50:return '%'\nbreak;\ncase 51:return 14\nbreak;\ncase 52:return 16\nbreak;\ncase 53:return \"COMMA\"\nbreak;\ncase 54:return 27\nbreak;\ncase 55:return 28\nbreak;\ncase 56:return \"OR\"\nbreak;\ncase 57:return \"AND\"\nbreak;\ncase 58:return 51\nbreak;\ncase 59:return 12\nbreak;\ncase 60:return 48\nbreak;\ncase 61:return 49\nbreak;\ncase 62:return 46\nbreak;\ncase 63:return 47\nbreak;\ncase 64:return 50\nbreak;\ncase 65:return 10\nbreak;\ncase 66:return 5\nbreak;\ncase 67:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:#[^\\n]*)/,/^(?:%[^\\n]*)/,/^(?:(\\r\\n|\\r|\\n))/,/^(?:\\s+)/,/^(?:\"[^\"]+\")/,/^(?:'[^']+')/,/^(?:proj\\b)/,/^(?:PROJ\\b)/,/^(?:Proj\\b)/,/^(?:π)/,/^(?:proy\\b)/,/^(?:PROY\\b)/,/^(?:Proy\\b)/,/^(?:sel\\b)/,/^(?:Sel\\b)/,/^(?:SEL\\b)/,/^(?:σ)/,/^(?:U\\b)/,/^(?:u\\b)/,/^(?:∪)/,/^(?:\\|X\\|)/,/^(?:\\|x\\|)/,/^(?:⋈)/,/^(?:X\\b)/,/^(?:x\\b)/,/^(?:×)/,/^(?:INT\\b)/,/^(?:int\\b)/,/^(?:Int\\b)/,/^(?:∩)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:Ren\\b)/,/^(?:ren\\b)/,/^(?:REN\\b)/,/^(?:ρ)/,/^(?:OR\\b)/,/^(?:or\\b)/,/^(?:Or\\b)/,/^(?:AND\\b)/,/^(?:and\\b)/,/^(?:And\\b)/,/^(?:[a-zA-Z][a-zA-Z0-9.]*)/,/^(?:[0-9]+(\\.[0-9]+)?\\b)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:-)/,/^(?:\\+)/,/^(?:\\^)/,/^(?:!)/,/^(?:%)/,/^(?:\\()/,/^(?:\\))/,/^(?:,)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\|)/,/^(?:&)/,/^(?:<>)/,/^(?:<-)/,/^(?:<=)/,/^(?:>=)/,/^(?:>)/,/^(?:<)/,/^(?:=)/,/^(?:;)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (true) {\nexports.parser = ra;\nexports.Parser = ra.Parser;\nexports.parse = function () { return ra.parse.apply(ra, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = __webpack_require__(/*! fs */ \"./node_modules/node-libs-browser/mock/empty.js\").readFileSync(__webpack_require__(/*! path */ \"./node_modules/path-browserify/index.js\").normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && __webpack_require__.c[__webpack_require__.s] === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/process/browser.js */ \"./node_modules/process/browser.js\"), __webpack_require__(/*! ./../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack://raToSql/./src/ra.js?");

/***/ }),

/***/ "./src/sql_scope.js":
/*!**************************!*\
  !*** ./src/sql_scope.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var currentId = 0;\r\n\r\nfunction getNewId(prefix){\r\n    return prefix + ++currentId;\r\n}\r\n\r\nfunction getNot(input) {\r\n    return \"NOT \" + input;\r\n}\r\n\r\nfunction getBooleanExpression(op1, b_e, op2) {\r\n    return `${op1} ${b_e} ${op2}`;\r\n}\r\n\r\nfunction getBooleanOperation(op1, operation, op2) {\r\n    return op1 + operation + op2;\r\n}\r\n\r\nfunction getUnion(sentence1, sentence2) {\r\n    return `(SELECT DISTINCT * FROM ${sentence1} UNION SELECT DISTINCT * FROM ${sentence2}) AS ${getNewId(\"UNION\")}`;\r\n}\r\n\r\nfunction getIntersection(sentence1, sentence2) {\r\n    return `(SELECT DISTINCT * FROM ${sentence1} INTERSECT SELECT DISTINCT * FROM ${sentence2}) AS ${getNewId(\"INTERSECT\")}`;\r\n}\r\n\r\nfunction getSubtraction(sentence1, sentence2) {\r\n    return `(SELECT DISTINCT * FROM ${sentence1} EXCEPT SELECT DISTINCT * FROM ${sentence2}) AS ${getNewId(\"SUB\")}`;\r\n}\r\n\r\nfunction getProduct(sentence1, sentence2) {\r\n    return `(SELECT DISTINCT * FROM ${sentence1}, ${sentence2}) AS ${getNewId(\"PROD\")}`;\r\n}\r\n\r\nfunction getNaturalJoin(sentence1, sentence2) {\r\n    return `(SELECT DISTINCT * FROM ${sentence1} NATURAL JOIN ${sentence2}) AS ${getNewId(\"NAT\")}`;\r\n}\r\n\r\nfunction getSelection(table, alias, condition){\r\n    return `(SELECT DISTINCT * FROM ${table} WHERE ${condition}) AS ${getNewId('SEL')}`;\r\n}\r\n\r\nfunction getProjection(table, alias, fieldList){\r\n    return `(SELECT DISTINCT ${fieldList} FROM ${table}) AS ${getNewId('PROJ')}`;\r\n}\r\n\r\nfunction getRename(table, alias, fieldList){\r\n    return `(SELECT DISTINCT ${fieldList.map(x => `null as ${x}`).join(',')} WHERE 1=2 UNION SELECT DISTINCT * FROM ${table}) AS ${getNewId('REN')}`;\r\n}\r\n\r\nfunction getSingleTable(tableName) {\r\n    return `##${tableName}## AS ${getNewId('ID')}`;\r\n    //return `(${tableName}) AS ${getNewId('ID')}`;\r\n}\r\n\r\nmodule.exports = {\r\n    getNewId,\r\n    getNot,\r\n    getBooleanExpression,\r\n    getBooleanOperation,\r\n    getUnion,\r\n    getSelection,\r\n    getProjection,\r\n    getSingleTable,\r\n    getProduct,\r\n    getIntersection,\r\n    getSubtraction,\r\n    getRename,\r\n    getNaturalJoin\r\n}\n\n//# sourceURL=webpack://raToSql/./src/sql_scope.js?");

/***/ })

/******/ });
});